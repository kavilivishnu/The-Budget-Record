[{"C:\\Users\\vaish\\Desktop\\Imp react js projects\\Budget Record\\budget\\src\\index.js":"1","C:\\Users\\vaish\\Desktop\\Imp react js projects\\Budget Record\\budget\\src\\App.js":"2","C:\\Users\\vaish\\Desktop\\Imp react js projects\\Budget Record\\budget\\src\\reportWebVitals.js":"3","C:\\Users\\vaish\\Desktop\\Imp react js projects\\Budget Record\\budget\\src\\BUDGET\\BudgetRecord.js":"4","C:\\Users\\vaish\\Desktop\\Imp react js projects\\Budget Record\\budget\\src\\BUDGET\\Trash.js":"5","C:\\Users\\vaish\\Desktop\\Imp react js projects\\Budget Record\\budget\\src\\BUDGET\\Navigate.js":"6"},{"size":500,"mtime":499162500000,"results":"7","hashOfConfig":"8"},{"size":187,"mtime":1610696443341,"results":"9","hashOfConfig":"8"},{"size":362,"mtime":499162500000,"results":"10","hashOfConfig":"8"},{"size":15568,"mtime":1614264852246,"results":"11","hashOfConfig":"8"},{"size":1460,"mtime":1614168123131,"results":"12","hashOfConfig":"8"},{"size":575,"mtime":1610781790878,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"n1z4pq",{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26","usedDeprecatedRules":"16"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"C:\\Users\\vaish\\Desktop\\Imp react js projects\\Budget Record\\budget\\src\\index.js",[],["29","30"],"C:\\Users\\vaish\\Desktop\\Imp react js projects\\Budget Record\\budget\\src\\App.js",[],"C:\\Users\\vaish\\Desktop\\Imp react js projects\\Budget Record\\budget\\src\\reportWebVitals.js",[],"C:\\Users\\vaish\\Desktop\\Imp react js projects\\Budget Record\\budget\\src\\BUDGET\\BudgetRecord.js",["31","32","33","34","35","36","37","38"],"// Updated the UI. That is, previously both the current state and the setter state of the array were getting diplayed.\r\n// it was like: EVENT: AMOUNT() and also the one containing information i.e., EVENT: something Amount (345$). This case\r\n// will be seen only when the user had opened the app for the first time. Once the user deletes the whole stuff, the\r\n// not required part will get deleted including the main information. The user can't get to te coclusion by themselves\r\n// that, this will solve the situation. So to make it more user-friendly, instead of associating the heading within the \r\n// map function, we append those headings to the properties within the object of an array. Doing so, only the setter\r\n// state will get displayed but not the current state that doesn't have any information in that. Another update was \r\n// showing an alert related to the \"TITLE\" part if clicked the name/rename button when not entered anything in the \r\n// filed. Previously the the nitification would pop out when the user hadn't entered any data in the field. Those \r\n//were the two updates made to the app. The previous copy of the whole code of this component is copied in the\r\n// CopyOfMain.js component.\r\n\r\nimport React, { useState, useEffect, Fragment } from \"react\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport { toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport { FiEdit3 } from \"react-icons/fi\";\r\nimport { IoMdTrash } from \"react-icons/io\";\r\nimport { MdClearAll } from \"react-icons/md\";\r\nimport Navigate from \"./Navigate\";\r\nimport Trash from \"./Trash\";\r\n\r\ntoast.configure();\r\nfunction BudgetRecord() {\r\n    useEffect(() => {\r\n        toast.info(\r\n            \"Hello👋! I'm BUDDY😃. I will help you be aware of your actions in this APP😊\",\r\n            { autoClose: 6000 }\r\n        );\r\n        toast.info(\r\n            \"Once you're done filling the fields, click on the currency button that is currently used at your place accordingly, to add the entered data to your record😊\",\r\n            { autoClose: 10000 }\r\n        );\r\n    }, []);\r\n\r\n    const [input, setInput] = useState(\"\");\r\n    const [money, setMoney] = useState(\"\");\r\n    const [array, setArray] = useState([\r\n        { id: null, name: \"\", amount: \"\", currency: \"\" }\r\n    ]);\r\n    const [total, setTotal] = useState(0);\r\n    const dheeram = \"د.إ\";\r\n    const dollar = \"$\";\r\n    const rupees = \"₹\";\r\n    const euro = \"€\";\r\n    const pound = \"£\";\r\n    const yen = \"¥\";\r\n    const canadian = \"C$\";\r\n    const [symbol, setSymbol] = useState(\"\");\r\n    const [search, setSearch] = useState(\"\");\r\n    const [filtered, setFiltered] = useState([]);\r\n    const [text, setText] = useState(\"\");\r\n    const [btn, setBtn] = useState(\"\");\r\n    const [finalArray, setFinalArray] = useState([\r\n        { id: null, lebeling: \"\", digit: \"\", bill: \"\" }\r\n    ]);\r\n    const [isTrashShowing, setIsTrashShowing] = useState(false);\r\n\r\n    let totalToInt = parseInt(total);\r\n    let moneyToInt = parseInt(money);\r\n    let deleteTotal = parseInt(total);\r\n\r\n    const handleMoney = (e) => {\r\n        const re = /^[0-9\\b]+$/;\r\n        if (e.target.value === \"\" || re.test(e.target.value)) {\r\n            setMoney(e.target.value);\r\n        } else {\r\n            alert(\"Hey! Only NUMBERS please🙃\");\r\n        }\r\n    };\r\n\r\n    const handleDelete = (items) => {\r\n        const id = items.id;\r\n        const amountToInt = parseInt(items.amount);\r\n        const name = items.name;\r\n        const clicked = window.confirm(\"You're DELETING AN ITEM!🤨 Are you sure?\");\r\n        setArray(array.filter((individualItem) => individualItem.id !== id));\r\n        setFinalArray([\r\n            ...finalArray,\r\n            { id: uuidv4(), lebeling: \"EVENT:\" + \" \" + name, digit: \"AMOUNT\" + \" \" + \"(\" + \" \" + amountToInt, bill: symbol + \")\" }\r\n        ]);\r\n        if (clicked === true) {\r\n            if (total === 0) {\r\n                setTotal(0);\r\n            } else {\r\n                deleteTotal = totalToInt - amountToInt;\r\n                setTotal(deleteTotal);\r\n                toast.success(\r\n                    \"BUDDY: Hello there my beautiful friend! An item has been DELETED from your RECORD👍\",\r\n                    { autoClose: 2000 }\r\n                );\r\n            }\r\n        }\r\n        if (clicked === false) {\r\n            setTotal(deleteTotal);\r\n            setArray(array);\r\n            console.log(\"working\");\r\n        }\r\n        setTotal(deleteTotal + symbol);\r\n        if (deleteTotal === 0) {\r\n            setTotal(0);\r\n        }\r\n    };\r\n\r\n    const handleEdit = (items) => {\r\n        const ID = items.id;\r\n        const variableName = items.name;\r\n        const amountToInteger = parseInt(items.amount);\r\n        setInput(variableName);\r\n        setMoney(amountToInteger);\r\n        setArray(array.filter((EachItem) => EachItem.id !== ID));\r\n        if (total !== 0) {\r\n            var finalResultWhenEdited = totalToInt - amountToInteger;\r\n            setTotal(finalResultWhenEdited);\r\n        } else {\r\n            setTotal(0);\r\n        }\r\n    };\r\n\r\n    const handleClear = () => {\r\n        if ((total === 0) | (array === [])) {\r\n            alert(\"Nothing to delete my friend!😊\");\r\n        } else {\r\n            var confirmation = window.confirm(\r\n                \"You're going to DELETE ALL YOUR RECORDS😨. You sure about this?\"\r\n            );\r\n            if (confirmation === true) {\r\n                setInput(\"\");\r\n                setMoney(\"\");\r\n                setTotal(0);\r\n                setArray([]);\r\n                setSearch(\"\");\r\n                toast.success(\r\n                    \"BUDDY: Hello there my beautiful friend! All you're RECORDS HAVE BEEN DELETED!👍\",\r\n                    { autoClose: 5000 }\r\n                );\r\n            }\r\n            if (confirmation === false) {\r\n                setTotal(total);\r\n                setArray(array);\r\n            }\r\n        }\r\n    };\r\n\r\n    const handleCurrency = (val) => {\r\n        if (input === \"\" || money === \"\") {\r\n            alert(\"Yo! You got to FILL THE FIELDS😅😄\");\r\n        } else {\r\n            setArray([\r\n                ...array,\r\n                {\r\n                    id: uuidv4(),\r\n                    name: \"EVENT\" + \":\" + \" \" + input + \" \",\r\n                    // amount: \"AMOUNT\" + \" \" + \"(\" + \" \" + money + val + \" \" + \")\",\r\n                    amount: money + val + \" , \" + \"IS THE AMOUNT\",\r\n                    currency: val\r\n                }\r\n            ]);\r\n            setSymbol(val);\r\n            var sumOfMoneyAndTotal = moneyToInt + totalToInt;\r\n            var currency = sumOfMoneyAndTotal + val;\r\n            setTotal(currency);\r\n            setInput(\"\");\r\n            setMoney(\"\");\r\n            toast.success(\r\n                \"BUDDY: Hello there my beautiful friend! An item has been ADDED to your RECORD😁👍\",\r\n                { autoClose: 6000 }\r\n            );\r\n        }\r\n    };\r\n\r\n    const handleTitle = () => {\r\n        if (text === \"\") {\r\n            alert(\"BUDDY: Hey there😊! Please fill in the field to give a title\");\r\n        } else {\r\n            setBtn(text);\r\n            setText(\"\");\r\n            toast.success(\r\n                \"BUDDY: Enjoy your trip my friend! Have a wonderful time✌️😁🥳!!\"\r\n            );\r\n        }\r\n    };\r\n\r\n    const handleRename = () => {\r\n        if (btn === \"\") {\r\n            alert(\"Sorry😅 you got to have a title to edit! You can't edit unless you have a title put up.\")\r\n        }\r\n        else {\r\n            setText(btn);\r\n            setBtn(\"\");\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (localStorage.getItem(\"list\")) {\r\n            setArray(JSON.parse(localStorage.getItem(\"list\")));\r\n            setTotal(JSON.parse(localStorage.getItem(\"total\")));\r\n            setBtn(JSON.parse(localStorage.getItem(\"data\")));\r\n            setFinalArray(JSON.parse(localStorage.getItem(\"delete\")));\r\n        }\r\n    }, []);\r\n\r\n    useEffect(\r\n        () => {\r\n            window.localStorage.setItem(\"list\", JSON.stringify(array));\r\n            window.localStorage.setItem(\"total\", JSON.stringify(total));\r\n        },\r\n        [array],\r\n        [total]\r\n    );\r\n\r\n    useEffect(() => {\r\n        window.localStorage.setItem(\"delete\", JSON.stringify(finalArray));\r\n    }, [finalArray]);\r\n\r\n    useEffect(() => {\r\n        window.localStorage.setItem(\"data\", JSON.stringify(btn));\r\n    }, [btn]);\r\n\r\n    useEffect(() => {\r\n        setFiltered(\r\n            array.filter((item) => {\r\n                return item.name.toLowerCase().includes(search.toLowerCase());\r\n            })\r\n        );\r\n    }, [search, array]);\r\n\r\n    return (\r\n        <div\r\n            style={{\r\n                textAlign: \"center\",\r\n                marginTop: \"30px\",\r\n                backgroundColor: \"whitesmoke\"\r\n            }}\r\n        >\r\n            <Navigate\r\n                isTrashShowing={isTrashShowing}\r\n                setIsTrashShowing={setIsTrashShowing}\r\n            />\r\n            {!isTrashShowing ? (\r\n                <Fragment>\r\n                    <h1 className=\"heading-1\">\r\n                        <i>Budget Record</i>\r\n                    </h1>\r\n                    <h1 className=\"title\">{btn}</h1>\r\n                    <br />\r\n                    <br />\r\n                    <input\r\n                        className=\"search1\"\r\n                        value={text}\r\n                        onChange={(e) => setText(e.target.value)}\r\n                        placeholder=\"Enter your Title here... Eg: Trip to Miami\"\r\n                    />\r\n                    <br />\r\n                    <button className=\"add_button\" onClick={(e) => handleTitle(e)}>\r\n                        <span style={{ color: \"white\" }}>Click to ADD new Title</span>\r\n                    </button>\r\n                    <button className=\"add_button\" onClick={(e) => handleRename(e)}>\r\n                        <span style={{ color: \"white\" }}>Click to EDIT the existing Title</span>\r\n                    </button>\r\n                    <br />\r\n                    <input\r\n                        className=\"input_name\"\r\n                        value={input}\r\n                        onChange={(e) => setInput(e.target.value)}\r\n                        placeholder=\"Enter Event Name...\"\r\n                    />\r\n                    <input\r\n                        className=\"input_amount\"\r\n                        value={money}\r\n                        onChange={handleMoney}\r\n                        placeholder=\"Enter Amount...\"\r\n                    />\r\n                    <br />\r\n                    <button\r\n                        className=\"add_button\"\r\n                        style={{ color: \"white\" }}\r\n                        onClick={() => handleCurrency(rupees)}\r\n                    >\r\n                        ₹\r\n          </button>\r\n                    <button\r\n                        className=\"add_button\"\r\n                        style={{ color: \"white\" }}\r\n                        onClick={() => handleCurrency(dheeram)}\r\n                    >\r\n                        د.إ\r\n          </button>\r\n                    <button\r\n                        className=\"add_button\"\r\n                        style={{ color: \"white\" }}\r\n                        onClick={() => handleCurrency(dollar)}\r\n                    >\r\n                        $\r\n          </button>\r\n                    <button\r\n                        className=\"add_button\"\r\n                        style={{ color: \"white\" }}\r\n                        onClick={() => handleCurrency(euro)}\r\n                    >\r\n                        €\r\n          </button>\r\n                    <button\r\n                        className=\"add_button\"\r\n                        style={{ color: \"white\" }}\r\n                        onClick={() => handleCurrency(pound)}\r\n                    >\r\n                        £\r\n          </button>\r\n                    <button\r\n                        className=\"add_button\"\r\n                        style={{ color: \"white\" }}\r\n                        onClick={() => handleCurrency(yen)}\r\n                    >\r\n                        ¥\r\n          </button>\r\n                    <button\r\n                        className=\"add_button\"\r\n                        style={{ color: \"white\" }}\r\n                        onClick={() => handleCurrency(canadian)}\r\n                    >\r\n                        C$\r\n          </button>\r\n                    <br /> <br />\r\n                    <br /> <br />\r\n                    <input\r\n                        className=\"search\"\r\n                        onChange={(e) => setSearch(e.target.value)}\r\n                        placeholder=\"Search for your event here...\"\r\n                    />\r\n                    <br /> <br />\r\n                    <h3 className=\"heading-2\">\r\n                        YOUR TOTAL IS ({\" \"}\r\n                        <span style={{ color: \"black\", fontStyle: \"italic\" }}>{total}</span>{\" \"}\r\n            )\r\n          </h3>\r\n                    <h3 className=\"heading-2\">\r\n                        <span style={{ color: \"#525252\", fontSize: \"22px\" }}>\r\n                            Any further calculations? We've got you covered!\r\n            </span>{\" \"}\r\n                        <a\r\n                            href=\"https://startcalculating.netlify.app\"\r\n                            target=\"_blank\"\r\n                            rel=\"noopener noreferrer\"\r\n                            style={{ color: \"dodgerblue\" }}\r\n                        >\r\n                            Visit this page...\r\n            </a>\r\n                    </h3>\r\n                    <button className=\"clear_all_button\" onClick={(e) => handleClear(e)}>\r\n                        <MdClearAll className=\"clear\" size=\"23px\" />\r\n                    </button>\r\n                    {filtered.map((items, id) => (\r\n                        <div key={id} className=\"all_items\">\r\n                            <p className=\"items\">\r\n                                <b>\r\n                                    <span className=\"items_name\">{items.name}</span>\r\n                                    <span className=\"items_amount\">{items.amount}</span>\r\n                                </b>\r\n                                {total !== 0 ? (\r\n                                    <div className=\"buttons\">\r\n                                        <button\r\n                                            className=\"edit_button\"\r\n                                            onClick={() => handleEdit(items)}\r\n                                        >\r\n                                            <FiEdit3 className=\"edit\" size=\"20px\" />\r\n                                        </button>\r\n                                        <button\r\n                                            className=\"delete_button\"\r\n                                            onClick={() => handleDelete(items)}\r\n                                        >\r\n                                            <IoMdTrash className=\"delete\" size=\"20px\" />\r\n                                        </button>\r\n                                    </div>\r\n                                ) : null}\r\n                            </p>\r\n                        </div>\r\n                    ))}\r\n                </Fragment>\r\n            ) : (\r\n                    <Trash\r\n                        finalArray={finalArray}\r\n                        setFinalArray={setFinalArray}\r\n                        symbol={symbol}\r\n                    />\r\n                )}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default BudgetRecord;\r\n","C:\\Users\\vaish\\Desktop\\Imp react js projects\\Budget Record\\budget\\src\\BUDGET\\Trash.js",["39"],"import React, { useEffect } from \"react\";\r\n\r\nfunction Trash(props) {\r\n    const { finalArray, setFinalArray } = props;\r\n\r\n    const handleTrash = () => {\r\n        if (finalArray === []) {\r\n            alert(\"Sorry🙃! Nothing to delete..\");\r\n        }\r\n        else {\r\n            var clicked = window.confirm(\"Hey there! You're about to empty your TRASH. You sure🤨?\");\r\n            if (clicked === true) {\r\n                setFinalArray([]);\r\n            }\r\n            if (clicked === false) {\r\n                setFinalArray(finalArray);\r\n            }\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"trash\" >\r\n            <button className=\"empty_trash\" style={{ color: \"white\" }} onClick={(e) => handleTrash(e)} >CLEAR TRASH</button>\r\n            {finalArray.map((items, id) => (\r\n                <div key={id} className=\"trash_items\">\r\n                    {/* <button onClick={() => handleSymbol(items)} >Show Symbol</button> */}\r\n                    <p>\r\n                        {\" \"}\r\n                        <span className=\"trash_name\">\r\n                            <b>{items.lebeling}</b><br />\r\n                        </span>\r\n                        <span\r\n                            className=\"trash_amount\">\r\n                            <b>{items.digit} {items.bill} {\"\"}</b>\r\n                        </span>\r\n                    </p>\r\n                </div>\r\n            ))}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Trash;\r\n","C:\\Users\\vaish\\Desktop\\Imp react js projects\\Budget Record\\budget\\src\\BUDGET\\Navigate.js",[],{"ruleId":"40","replacedBy":"41"},{"ruleId":"42","replacedBy":"43"},{"ruleId":"44","severity":1,"message":"45","line":80,"column":48,"nodeType":"46","messageId":"47","endLine":80,"endColumn":49},{"ruleId":"44","severity":1,"message":"45","line":80,"column":78,"nodeType":"46","messageId":"47","endLine":80,"endColumn":79},{"ruleId":"44","severity":1,"message":"45","line":80,"column":84,"nodeType":"46","messageId":"47","endLine":80,"endColumn":85},{"ruleId":"44","severity":1,"message":"45","line":80,"column":90,"nodeType":"46","messageId":"47","endLine":80,"endColumn":91},{"ruleId":"44","severity":1,"message":"45","line":153,"column":35,"nodeType":"46","messageId":"47","endLine":153,"endColumn":36},{"ruleId":"44","severity":1,"message":"45","line":153,"column":41,"nodeType":"46","messageId":"47","endLine":153,"endColumn":42},{"ruleId":"44","severity":1,"message":"45","line":155,"column":49,"nodeType":"46","messageId":"47","endLine":155,"endColumn":50},{"ruleId":"48","severity":1,"message":"49","line":208,"column":9,"nodeType":"50","endLine":208,"endColumn":16,"suggestions":"51"},{"ruleId":"52","severity":1,"message":"53","line":1,"column":17,"nodeType":"54","messageId":"55","endLine":1,"endColumn":26},"no-native-reassign",["56"],"no-negated-in-lhs",["57"],"no-useless-concat","Unexpected string concatenation of literals.","BinaryExpression","unexpectedConcat","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'total'. Either include it or remove the dependency array.","ArrayExpression",["58"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation",{"desc":"59","fix":"60"},"Update the dependencies array to be: [array, total]",{"range":"61","text":"62"},[8083,8090],"[array, total]"]